load("@rules_erlang//:erlang_app.bzl", "erlang_app", "test_erlang_app")
load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "DEFAULT_PLT_APPS", "dialyze", "plt")
load("@rules_erlang//:eunit2.bzl", "eunit")
load("@rules_erlang//:ct.bzl", "assert_suites2", "ct_suite")

NAME = "osiris"

VERSION = "1.5.1"

DESCRIPTION = "New project"

APP_ENV = """[
	{data_dir, "/tmp/osiris"},
	{port_range, {6000, 6500}},
	{max_segment_size_chunks, 256000},
	{replication_transport, tcp},
	{replica_forced_gc_default_interval, 4999}
]"""

EXTRA_APPS = [
    "sasl",
    "crypto",
]

DEPS = [
    "@gen_batch_server//:erlang_app",
]

RUNTIME_DEPS = [
    "@seshat//:erlang_app",
]

erlang_app(
    app_env = APP_ENV,
    app_name = NAME,
    app_version = VERSION,
    app_description = DESCRIPTION,
    extra_apps = EXTRA_APPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

test_erlang_app(
    app_env = APP_ENV,
    app_name = NAME,
    app_version = VERSION,
    app_description = DESCRIPTION,
    extra_apps = EXTRA_APPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref()

plt(
    name = "deps_plt",
    apps = DEFAULT_PLT_APPS + [
        "compiler",
        "tools",
        "runtime_tools",
        "mnesia",
        "public_key",
        "asn1",
        "ssl",
        "inets",
    ],
    for_target = ":erlang_app",
)

dialyze(
    size = "small",
    dialyzer_opts = [
        "-Werror_handling",
        "-Wunmatched_returns",
    ],
    plt = ":deps_plt",
)

eunit(
    name = "eunit",
    deps = [
        "@eunit_formatters//:erlang_app",
    ],
    eunit_opts = [
        "no_tty",
        "{report, {eunit_progress, [colored, profile]}}",
    ],
    target = ":test_erlang_app",
)

[ct_suite(
    name = f.replace("test/", "").replace(".erl", ""),
) for f in glob(
    ["test/*_SUITE.erl"],
    exclude = ["test/osiris_SUITE.erl"],
)]

ct_suite(
    name = "osiris_SUITE",
    data = [
        "@tls_gen//:basic",
    ],
    test_env = {
        "DEPS_DIR": "$TEST_SRCDIR/$TEST_WORKSPACE/external",
    },
)

assert_suites2()
